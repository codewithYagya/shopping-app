// Importing createSlice function from Redux Toolkit for creating slices
import { createSlice } from "@reduxjs/toolkit";

// Importing initial cart item data from the products file
import { cartItem } from "../products";

// Creating a Redux slice for managing cart item state
export const cartSlice = createSlice({
  // Name of the slice
  name: "CartItem",
  
  // Initial state containing cart item data
  initialState: {
    value: cartItem,
  },
  
  // Reducers define how the state can be modified
  reducers: {
    // Reducer for adding cart items to the state
    addcartItem: (state, action) => {
      // Checking if the payload exists before adding to the state
      if (action.payload) {
        state.value.push(action.payload);
      }
    },
    
    // Reducer for removing a cart item from the state
    removeCartItem: (state, action) => {
      // Checking if the payload exists before removing from the state
      if (action.payload) {
        // Filtering out the item with the specified id from the cart items
        const newItem = state.value.filter((item) => item.id !== action.payload.id)
        
        // Updating the state with the filtered cart items
        state.value = newItem;
      }
    }
  }
});

// Extracting action creators from the slice
export const { addcartItem, removeCartItem } = cartSlice.actions;

// Exporting the reducer function generated by createSlice
export default cartSlice.reducer;
